#include <stdlib.h> 
#include <stdio.h>

struct ListNode {
    int val;
    struct ListNode *next;
};

struct ListNode* initNode(int* array, int n) {
    struct ListNode* res = 0;
    struct ListNode* head = 0;
    int i;
    for (i = 0; i < n; ++i) {
        struct ListNode* tmp = malloc(sizeof(struct ListNode)); 
        tmp->next = 0;
        tmp->val = array[i];
        if (res) {
            res->next = tmp;
            res = res->next;
        } else {
            res = tmp;
            head = res;
        }   
    }   
    return head;
};
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
    struct ListNode* res = 0;
    struct ListNode* head = 0;
    int sum = 0;
    int carry = 0;
    while (l1 && l2) {
        struct ListNode* tmp = malloc(sizeof(struct ListNode));
        tmp->next = 0;
        sum = l1->val + l2->val + carry;
        carry = 0;
        if (sum < 10) {
            tmp->val = sum;
            sum = 0;
        } else {
            tmp->val = sum % 10;
            carry = 1;
        }
        if (res) {
            res->next = tmp;
            res = res->next;
        } else {
            res = tmp;
            head = res;
        }
        l1 = l1->next;
        l2 = l2->next;
    }
      while (l1) {
        struct ListNode* tmp = malloc(sizeof(struct ListNode));
        tmp->next = 0;
        sum = l1->val + carry;
        carry = 0;
        if (sum < 10) {
            tmp->val = sum;
        } else {
            tmp->val = sum % 10;
            carry = 1;
        }
        if (res) {
            res->next = tmp;
            res = res->next;
        } else {
            res = tmp;
        }
        sum = 0;
        l1 = l1->next;
    }
    while (l2) {
        struct ListNode* tmp = malloc(sizeof(struct ListNode));
        tmp->next = 0;
        sum = l2->val + carry;
        carry = 0;
        if (sum < 10) {
            tmp->val = sum;
        } else {
            tmp->val = sum % 10;
            carry = 1;
        }
        if (res) {
            res->next = tmp;
            res = res->next;
        } else {
            res = tmp;
        }
        sum = 0;
        l2 = l2->next;
    }
       if (carry) {
        struct ListNode* tmp = malloc(sizeof(struct ListNode));
        tmp->next = 0;
        tmp->val = carry;
        res->next = tmp;
    }
    return head;
}

struct ListNode* addTwoNumbersNew(struct ListNode* l1, struct ListNode* l2){
    int carry = 0;
    struct ListNode* res = 0;
    struct ListNode* head = 0;
    while (l1 != 0 || l2 != 0) {
        int val1 = l1 ? l1->val : 0;
        int val2 = l2 ? l2->val : 0;
        int sum = (val1 + val2 + carry) % 10;
        carry = (val1 + val2 + carry) / 10;
        if (res) {
            res->next = malloc(sizeof(struct ListNode));
            res->next->next = 0;
            res->next->val = sum;
            res = res->next;
        } else {
            res = malloc(sizeof(struct ListNode));
            res->next = 0;
            res->val = sum;
            head = res;
        }
        if (l1) { l1 = l1->next; }
        if (l2) { l2 = l2->next; }
    }
    if (carry) {
        res->next = malloc(sizeof(struct ListNode));
        res->next->next = 0;
        res->next->val = carry;
    }
    return head;
}

void output(struct ListNode* l)
{
    while (l) {
        printf("%d ", l->val);
        l = l->next;
    }
}

int main() {
    int a1[] = {1};
    int a2[] = {9,9};
    struct ListNode* l1 = initNode(a1, 1);
    struct ListNode* l2 = initNode(a2, 2);
    struct ListNode* l3 = addTwoNumbersNew(l1, l2);
    output(l3);
    return 0;
}
